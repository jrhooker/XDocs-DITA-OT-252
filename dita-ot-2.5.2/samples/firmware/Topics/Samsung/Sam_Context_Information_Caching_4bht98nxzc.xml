<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA 1.2 Topic//EN" "/SysConfig/backup/dtd/technicalContent/dtd/topic.dtd">
<topic xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" base="Princeton" id="Context_Information_Caching_4bht98nxzc" xml:lang="en-US">
  <title>Context Information Caching</title>

  <body>
    <p>Due to the size of the <xref href="Sam_Data_Manager_Data_Structures_4eht98nxzd.xml#Data_Manager_Data_Structures_4eht98nxzd/Command_State_Structure_4kht98nxzd">Command
    State Structure</xref> and the limited amount of data RAM available to the
    Data Manager, a caching mechanism is utilized in order to support the
    required number of outstanding NVM Express I/O requests.</p>

    <p>A number of Command State Structures located in
    local data RAM are utilized as cache entries. When the Data Manager
    receives an NVM Express I/O command from the Submission Queue Manager, it
    allocates and locks a cache entry and copies the received command from the
    inbound IPC message buffer to the cache entry and then frees the IPC
    message buffer.</p>

    <p>The cache entry is locked in local data RAM until
    all flash read/write requests that constitute the command have been
    issued, at which point the cache entry is unlocked. An unlocked cache
    entry may be reallocated when a new NVM Express I/O command is received.
    This causes the unlocked contents of the cache entry to be flushed to
    controller memory.</p>

    <p>As completions to read/write requests are received
    by the Data Manager, a cache lookup is performed to determine if the
    required context information is still in cache or has been flushed to
    controller memory. If the required context information is located in
    cache, the cache entry is locked and processing of the NVM Express I/O
    command continues. If the required context information is no longer in
    cache (because it has been flushed), a cache entry is allocated (which
    could cause the contents of the cache entry to be flushed), and a request
    is issued to fetch the required context information from controller
    memory.</p>

    <p>When the processing of an NVM Express I/O command
    completes, the cache entry is freed.</p>

    <p>If the number of outstanding NVM Express I/O
    commands is relatively small, it may be possible for a Data Manager to
    maintain all of its Command State Structures in local data RAM cache
    entries without the need to flush them to controller memory. This has an
    obvious performance advantage over having to flush and reload cache
    entries from controller memory.</p>
  </body>
</topic>