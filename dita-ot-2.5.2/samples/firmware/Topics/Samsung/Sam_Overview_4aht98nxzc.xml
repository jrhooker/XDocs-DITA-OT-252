<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA 1.2 Topic//EN" "/SysConfig/backup/dtd/technicalContent/dtd/topic.dtd">
<topic xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" base="Princeton" id="Overview_4aht98nxzc" xml:lang="en-US">
  <title>Overview</title>

  <body>
    <p>The main function of the Data Manager is to process
    NVM Express requests from the host computer. The submission queue manager,
    located in the Host Interface, fetches NVM Express commands from the host
    computer's memory and forwards them to the Data Manager. The Data Manager
    is responsible for performing the appropriate DMA operations, issuing Data
    Frame read/write requests to the FTL, and generating NVM Express
    completions back to the host.</p>

    <p>To achieve maximum performance, multiple Data
    Managers may be instantiated. Each Data Manager operates in an
    non-blocking, asynchronous event-driven manner in order to hide the
    latency associated with the flash accesses.</p>

    <p>Due to the asynchronous nature of the Data Managers,
    it is necessary for them to maintain context information for each NVM
    Express command. The Data Managers employ two state machines that operate
    on separate context structures: the <xref href="Sam_Data_Manager_Data_Structures_4eht98nxzd.xml#Data_Manager_Data_Structures_4eht98nxzd/Command_State_Structure_4kht98nxzd">Command
    State Structure</xref> and the <xref href="Sam_Data_Manager_Data_Structures_4eht98nxzd.xml#Data_Manager_Data_Structures_4eht98nxzd/Data_Frame_State_Structure_4mht98nxzd">Data
    Frame State Structure</xref>. The Command State Structures are used to
    maintain the state information for each NVM Express command while the Data
    Frame State Structures are used to maintain the state information for each
    Data Frame request that constitutes an NVM Express command.</p>
  </body>
</topic>