<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA 1.2 Topic//EN" "/SysSchema/dita/dtd/technicalContent/dtd/topic.dtd">
<topic xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" base="Princeton" id="Virtual_Target_State_Structure_9ahta874f8" xml:lang="en-US">
  <title>Virtual Target State Structure</title>

  <body>
    <p>Virtual Target State structure is used to maintain
    context information for each active virtual target. Two virtual target
    state structures are allocated for each virtual target, active and prime.
    When the active virtual target is completed (last page of virtual block is
    written), the prime virtual target will become active and a new virtual
    block is allocated for prime.</p>

    <fig id="Virtual_Target_State_Structure_9bhta874f8">
      <title>Virtual Target State Structure</title>

      <codeblock>
typedef struct virtual_block_state_s
{
    state_header_t header;
    u32 blockClose:1;
    u32 writeError:1;
    u32 virtualTargetIndex:16;
    u32 activeVirtualTargetIndex:10;
    u32 primeIndex:4;
    u16 startingTarget;
    u16 endingTarget;
    u16 activeTarget;
    u16 pageNum;
    u16 completedReqCount;
    u16 pendingFlashOpCount;
    u16 dataFrameNumberInVirtualPage;
    u16 numberOfDataFramesInVirtualPage;
    u32 bytesRemainingInVirtualPage;
    u32 numberOfBytesInVirtualPage;
    u32 eraseCount;
    u32 flashAddr;
    u32 eccContextIndex:8;
    u32 reserved:24;
    u32 badBlockBitmap[8];
} virtual_target_state_t;</codeblock>
    </fig>

    <parml>
      <plentry>
        <pt>header</pt>

        <pd>Virtual target state header.</pd>
      </plentry>

      <plentry>
        <pt>blockClose</pt>

        <pd>Flag to inform the Wearleveling Manager to close existing opened
        virtual target.</pd>
      </plentry>

      <plentry>
        <pt>writeError</pt>

        <pd>Flag to inform Wearleveling Manager that current opened block has
        write errors and corresponding bit in the badBlockBitmap is
        updated.</pd>
      </plentry>

      <plentry>
        <pt>virtualTargetIndex</pt>

        <pd>Virtual target index for which this structure belongs to. This
        index can go up two times config.myTotalVirtualTargets.</pd>
      </plentry>

      <plentry>
        <pt>activeVirtualTargetIndex</pt>

        <pd>Active virtual target index for which this structure belongs to.
        This index can go only up config.myTotalVirtualTargets.</pd>
      </plentry>

      <plentry>
        <pt>primeIndex</pt>

        <pd>Current virtual target state structure index (active or
        prime).</pd>
      </plentry>

      <plentry>
        <pt>startingTarget</pt>

        <pd>Starting target of the virtual target.</pd>
      </plentry>

      <plentry>
        <pt>endingTarget</pt>

        <pd>Ending target of the virtual target.</pd>
      </plentry>

      <plentry>
        <pt>activeTarget</pt>

        <pd>Active target of the virtual target.</pd>
      </plentry>

      <plentry>
        <pt>pageNum</pt>

        <pd>Active page number in the virtual target.</pd>
      </plentry>

      <plentry>
        <pt>completedReqCount</pt>

        <pd>Number of requests completed in current virtual target.</pd>
      </plentry>

      <plentry>
        <pt>pendingFlashOpCount</pt>

        <pd>Pending flash completion count for the current virtual
        target.</pd>
      </plentry>

      <plentry>
        <pt>dataFrameNumberInVirtualPage</pt>

        <pd>Data frame number within the virtual page.</pd>
      </plentry>

      <plentry>
        <pt>numberOfDataFramesInVirtualPage</pt>

        <pd>Precalculated number of data frames that can fit in the virtual
        page. This is used for write arbitration.</pd>
      </plentry>

      <plentry>
        <pt>bytesRemainingInVirtualPage</pt>

        <pd>Number of bytes remaining in the virtual page within virtual
        target.</pd>
      </plentry>

      <plentry>
        <pt>numberOfBytesInVirtualTarget</pt>

        <pd>Number of bytes in the virtual page within this virtual target.
        </pd>
      </plentry>

      <plentry>
        <pt>eraseCount</pt>

        <pd>Erase count associated with this virtual target.</pd>
      </plentry>

      <plentry>
        <pt>flashAddr</pt>

        <pd>Flash address to write XOR data.</pd>
      </plentry>

      <plentry>
        <pt>eccContextIndex</pt>

        <pd>ECC context index to be used for this LUN.</pd>
      </plentry>

      <plentry>
        <pt>reserved</pt>

        <pd>Reserved for future use.</pd>
      </plentry>

      <plentry>
        <pt>badBlockBitmap</pt>

        <pd>Bad block bitmap for current virtual target.</pd>
      </plentry>
    </parml>
  </body>
</topic>