<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA 1.2 Topic//EN" "/SysSchema/dita/dtd/technicalContent/dtd/topic.dtd">
<topic xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" base="Princeton" id="Recovery_Manager_Data_Structure" xml:lang="en-US">
  <title><ph audience="PMCInternal">Belmar </ph>Recovery Manager Data Structure</title>

  <body>
    <p>The following sections describe the data structures
    utilized by the Recovery Manager.</p>

    <section id="State_Header_Structure"><title>State Header Structure</title> <p>The Recovery Manager has multiple context structures
    and all contain a header structure to store generic state information.
    This structure is described in <xref href="#Recovery_Manager_Data_Structures/fig_State_Header_Structure"/></p><fig id="fig_State_Header_Structure">
        <title>State Header Structure</title>
      </fig><fig id="State_Header_Structure">
        <codeblock>
typedef struct  state_header_s
{
    single_list_head_t list;
    u32 state:8;
    u32 stateType:8;
    u32 status:16;
}state_header_t;</codeblock>
      </fig> <ul>
        <li id="d1e4552"><p> <codeph>list</codeph> </p> <ul>
            <li id="d1e4560"><p>Single
            list head used for queuing.</p></li>
          </ul></li>

        <li id="d1e4568"><p> <codeph>State</codeph> </p> <ul>
            <li id="d1e4576"><p>State
            of the context structure.</p></li>
          </ul></li>

        <li id="d1e4584"><p> <codeph>StateType</codeph> </p> <ul>
            <li id="d1e4592"><p>Type of
            the Context Structure.</p></li>
          </ul></li>

        <li id="d1e4600"><p> <codeph>status</codeph> </p> <ul>
            <li id="d1e4608"><p>Status
            bits related to the current state.</p></li>
          </ul></li>
      </ul></section>

    <section id="Read_Retry_State_Structure"><title>Read Retry State Structure</title> <p>The Read Retry State structure is used to maintain
    context information for each outstanding ReadRetryReq. This structure is
    described in <xref href="#Recovery_Manager_Data_Structures/fig_Read_Retry_State_Structure"/>.</p>
    <fig id="fig_Read_Retry_State_Structure">
        <title>Read Retry State Structure</title>
      </fig><fig id="Read_Retry_State_Structure">
        <codeblock>
typedef struct  read_retry_state_s
{
    state_header_t header;
    u32 flashAddr;
    u32 dataFrameBuff0;
    u32 dataFrameBuff1;
    u32 dataFrameOffset:16;
    u32 dataFrameLength:16;
    u32 startDumpCount:16;
    u32 eccChunkNum:4;
    u32 eccChunkRateIndex:4;
    u32 readRetryCplStatus:4;
    u32 numBuffers : 4;
    u32 activeHeader : 8;
    u32 erasedPage : 1;
    u32 retryCount : 3;
    u32 reserved : 20;
    u32 outMsgQ;
    u32 rawBuffAddr[MAX_RETRY+1];
    u32 tag[2];
} read_retry_state_t;</codeblock>
      </fig> <ul>
        <li id="d1e4645"><p> <codeph>header</codeph> </p> <ul>
            <li id="d1e4653"><p>State
            header structure.</p></li>
          </ul></li>

        <li id="d1e4661"><p> <codeph>flashAddr</codeph> </p> <ul>
            <li id="d1e4669"><p>The
            physical flash address of page to be read.</p></li>
          </ul></li>

        <li id="d1e4677"><p> <codeph>dataFrameBuff0</codeph> </p> <ul>
            <li id="d1e4685"><p>The
            data frame buffer line address for the first data frame.</p></li>
          </ul></li>

        <li id="d1e4677"><p> <codeph>dataFrameBuff01</codeph> </p> <ul>
            <li id="d1e4685"><p>The
            data frame buffer line address for the second data frame.</p></li>
          </ul></li>

        <li id="d1e4693"><p> <codeph>dataFrameOffset</codeph> </p> <ul>
            <li id="d1e4701"><p>The
            data frame buffer DWords offset.</p></li>
          </ul></li>

        <li id="d1e4709"><p> <codeph>dataFrameLength</codeph> </p> <ul>
            <li id="d1e4717"><p>The
            data frame length in DWords.</p></li>
          </ul></li>

        <li id="d1e4104"><p> <codeph>startDumpCount</codeph> </p> <ul>
            <li id="d1e4112"><p>Number
            of DWords to be dumped in first ECC chunk.</p></li>
          </ul></li>

        <li id="d1e4088"><p> <codeph>eccChunkNum</codeph> </p> <ul>
            <li id="d1e4096"><p>The ECC
            chunk number associated with read error.</p></li>
          </ul></li>

        <li id="d1e4088"><p> <codeph>eccChunkRateIndex</codeph> </p> <ul>
            <li id="d1e4096"><p>the ECC
            code rate index.</p></li>
          </ul></li>

        <li id="d1e4936"><p> <codeph>readRetryCplStatus</codeph></p> <ul>
            <li id="d1e4944"><p>This
            field encodes the status of the read retry operation.</p></li>
          </ul></li>

        <li id="d1e4936"><p> <codeph>numBuffers</codeph></p> <ul>
            <li id="d1e4944"><p>number
            of data frame buffer that recovery manager should use.</p></li>
          </ul></li>

        <li id="d1e4936"><p> <codeph>activeHeader</codeph></p> <ul>
            <li id="d1e4944"><p>active
            header with read error for each reclaim state structure.</p></li>
          </ul></li>

        <li id="d1e4936"><p> <codeph>erasedPage</codeph></p> <ul>
            <li id="d1e4944"><p>This is
            set if the percentage of bits in the ECC Chunk prior to LDPC
            correction that had a value of one was greater than the threshold
            specified by the erased page ECC chunk threshold (ERASEDTH) field
            in the ECC Control (ECCCTL) register.</p></li>
          </ul></li>

        <li id="d1e4936"><p> <codeph>outMsgQ</codeph></p> <ul>
            <li id="d1e4944"><p>ID of
            the outbound IPC port that should be used when sending the
            completion to this message.</p></li>
          </ul></li>

        <li id="d1e4936"><p> <codeph>rawBuffAddr[MAX_RETRY+1]</codeph></p>
        <ul>
            <li id="d1e4944"><p>The raw
            buffer line address for each read retry plus the one comes from
            Lookup manager or Wearlevelling manager..</p></li>
          </ul></li>

        <li id="d1e4952"><p> <codeph>Tags</codeph> </p><ul>
            <li id="d1e4960"><p>Storage
            for tags from read retry request.</p></li>
          </ul></li>
      </ul></section>
  </body>
</topic>